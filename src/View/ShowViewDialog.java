/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;


import Controller.Service;
import java.awt.BorderLayout;
import java.awt.Color;
import java.rmi.RemoteException;
import javax.swing.JDialog;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author DELL
 */
public class ShowViewDialog extends javax.swing.JPanel {

    /**
     * Creates new form ViewSimple
     */
    JDialog dialog;
    int id;

    public ShowViewDialog(JDialog dialog, int id) {
        initComponents();
        this.dialog = dialog;
        this.id = id;

        try {
            feedackBarChart();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

    public void feedackBarChart() throws RemoteException{

        final DefaultCategoryDataset dataset = new Service().getSystemAnalysisStub().getFeedbackAnalysis(id);
        JFreeChart chart = ChartFactory.createBarChart(
                "Profit Graph",
                "Feedback",
                "Score",
                dataset,
                PlotOrientation.VERTICAL, true, true, false);
        chart.setBackgroundPaint(Color.WHITE);
        CategoryPlot plot = chart.getCategoryPlot();
        BarRenderer renderer = (BarRenderer) plot.getRenderer();

        // Set the width of the bars (in pixels)
        renderer.setItemMargin(0.1); // Set the margin between bars
        renderer.setMaximumBarWidth(0.1);
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setDomainZoomable(false);
        chartPanel.setRangeZoomable(false);

        // Update panel layout
        feedbackPanel.setLayout(new BorderLayout());
        feedbackPanel.removeAll();
        feedbackPanel.add(chartPanel, BorderLayout.CENTER);
        feedbackPanel.revalidate();
        feedbackPanel.repaint();
        
//        chartPanel.addChartMouseListener(new ChartMouseListener() {
//
//            public void chartMouseClicked(ChartMouseEvent e) {
//                ChartEntity entity = e.getEntity();
//                if (entity instanceof CategoryItemEntity) {
//                    CategoryItemEntity itemEntity = (CategoryItemEntity) entity;
//                    String seriesKey = itemEntity.getDataset().getRowKey(itemEntity.getSeries()).toString();
//                    String categoryKey = itemEntity.getDataset().getColumnKey(itemEntity.getCategoryIndex()).toString();
//                    Number value = itemEntity.getDataset().getValue(itemEntity.getSeries(), itemEntity.getCategoryIndex());
//
//                    String message = String.format("%s, Feedback: %s, Value: %s", seriesKey, categoryKey, value);
//                    JOptionPane.showMessageDialog(null, message);
//                } else if (entity instanceof XYItemEntity) {
//                    XYItemEntity itemEntity = (XYItemEntity) entity;
//                    int seriesIndex = itemEntity.getSeriesIndex();
//                    int itemIndex = itemEntity.getItem();
//                    double x = itemEntity.getDataset().getX(seriesIndex, itemIndex).doubleValue();
//                    double y = itemEntity.getDataset().getY(seriesIndex, itemIndex).doubleValue();
//
//                    String message = String.format("%d, Item: %d, X: %.2f, Y: %.2f", seriesIndex, itemIndex, x, y);
//                    JOptionPane.showMessageDialog(null, message);
//                }
//            }
//
//            public void chartMouseMoved(ChartMouseEvent e) {
//            }
//
//        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        feedbackPanel = new javax.swing.JPanel();

        feedbackPanel.setBackground(new java.awt.Color(255, 255, 255));
        feedbackPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(feedbackPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 817, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(feedbackPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(331, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel feedbackPanel;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
