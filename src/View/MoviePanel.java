/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Panel.java to edit this template
 */
package View;

import Controller.Service;
import Model.Movie;
import Model.MovieItem;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;

/**
 *
 * @author DELL
 */
public class MoviePanel extends javax.swing.JPanel {

    /**
     * Creates new form RoleTypePanel
     */
    public MoviePanel() {
        initComponents();
        getAllMovieAction();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        typeBox = new javax.swing.JComboBox<>();
        searchField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        insertBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        moviePanel = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(1100, 623));

        jPanel1.setPreferredSize(new java.awt.Dimension(1100, 623));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(1100, 79));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Movie");
        jLabel5.setToolTipText("");

        typeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "Genre", "Director", "Cast" }));
        typeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeBoxActionPerformed(evt);
            }
        });

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        insertBtn.setText("Insert");
        insertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Type :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel5)
                .addGap(60, 60, 60)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(typeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchBtn)
                .addGap(18, 18, 18)
                .addComponent(refreshBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 388, Short.MAX_VALUE)
                .addComponent(insertBtn)
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(typeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn)
                    .addComponent(refreshBtn)
                    .addComponent(insertBtn)
                    .addComponent(jLabel1))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(moviePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(moviePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(528, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void insertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBtnActionPerformed
        // TODO add your handling code here:
        addMovieAction();
    }//GEN-LAST:event_insertBtnActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void typeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeBoxActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        getAllMovieAction();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void search() {
        try {
            List<Movie> list = new ArrayList<>();
            String type = typeBox.getItemAt(typeBox.getSelectedIndex());
            for (Movie movie : new Service().getMovieStub().getAllMovie()) {
                switch (type) {
                    case "Title":
                        if (movie.getTitle().toLowerCase().contains(searchField.getText().toLowerCase())) {
                            list.add(movie);
                        }
                        break;
                    case "Genre":
                        if (movie.getGenre().toLowerCase().contains(searchField.getText().toLowerCase())) {
                            list.add(movie);
                        }
                        break;
                    case "Director":
                        if (movie.getDirector().toLowerCase().contains(searchField.getText().toLowerCase())) {
                            list.add(movie);
                        }
                        break;
                    case "Cast":
                        if (movie.getCast().toLowerCase().contains(searchField.getText().toLowerCase())) {
                            list.add(movie);
                        }
                        break;
                }
            }
            //moviePanel.setLayout(new BorderLayout());
            JPanel cardPanel = new JPanel();
            int numColumns = 2;
            int numRows = (int) Math.ceil((double) list.size() / numColumns);
            int count = 0;
            int ans = ((int) list.size() % numColumns);
            if (ans != 0) {
                count = numColumns - ans;
            }

            cardPanel.setLayout(new GridLayout(numRows, numColumns, 10, 10)); // GridLayout to display cards vertically
            for (Movie movie : list) {
                cardPanel.add(new MovieItem(movie));
            }
            for (int i = 0; i < count; i++) {
                cardPanel.add(new JLabel());

            }
            JScrollPane scrollPane = new JScrollPane(cardPanel);
            if (numRows < 2) {

            } else {
                scrollPane.setPreferredSize(new Dimension(1130, 520));
            }
            scrollPane.setBorder(BorderFactory.createEmptyBorder());
            moviePanel.removeAll(); // Clear existing components
            moviePanel.add(scrollPane);
            moviePanel.revalidate(); // Refresh layout
            moviePanel.repaint(); // Redraw panel
        } catch (RemoteException e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton insertBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel moviePanel;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchField;
    private javax.swing.JComboBox<String> typeBox;
    // End of variables declaration//GEN-END:variables

    private void addMovieAction() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int width = (int) screenSize.getWidth();
        int height = (int) screenSize.getHeight();
        JDialog dialog = new JDialog((JFrame) null, "", true);
        dialog.setSize(width, height);
        dialog.setLocationRelativeTo(null); // Center the dialog

        dialog.getContentPane().add(new AddMovieDialog(dialog));

        // Set up custom close behavior
        dialog.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);

        // Show the JDialog
        dialog.setVisible(true);

    }

    /**
     *
     * @return
     */
    private void getAllMovieAction() {
        try {
            JPanel cardPanel = new JPanel();
            List<Movie> list = new Service().getMovieStub().getAllMovie();
            int numColumns = 2;
            int numRows = (int) Math.ceil((double) list.size() / numColumns);

            int count = 0;
            int ans = ((int) list.size() % numColumns);
            if (ans != 0) {
                count = numColumns - ans;
            }

            cardPanel.setLayout(new GridLayout(numRows, numColumns, 15, 15)); // GridLayout to display cards vertically
            for (Movie movie : list) {
                cardPanel.add(new MovieItem(movie));

            }
            for (int i = 0; i < count; i++) {
                cardPanel.add(new JLabel());
            }

            JScrollPane scrollPane = new JScrollPane(cardPanel);
            if (numRows < 2) {

            } else {
                scrollPane.setPreferredSize(new Dimension(1130, 520));
            }
            scrollPane.setBorder(BorderFactory.createEmptyBorder());

            moviePanel.removeAll(); // Clear existing components
            moviePanel.add(scrollPane);
            moviePanel.revalidate(); // Refresh layout
            moviePanel.repaint(); // Redraw panel
        } catch (RemoteException e) {
        }
    }
}
